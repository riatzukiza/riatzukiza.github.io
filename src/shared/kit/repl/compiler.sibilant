(namespace repl)


(include "../../../../headers/repl.sibilant"
         "../../../../headers/interface.sibilant"
         "../../../../headers/core")

(import-namespace core)
(import-namespace interface )
(import-namespace events)

(import Interface "../interface/index.js")
(import Actor "../actor/index.js")
(import emit "../events/index.js")

(require! 'sibilant)

(define Compiler Actor

  (init () (.call Actor.init this))
  (def-generic *send (data)
    (pipe (Promise.resolve data)
          (.then (#-> .to-string sibilant (get  'js )))
          (.then (R.tap (emit 'message this)))
          (.catch (=> (e)
                      (.emit this 'error e)
                      (throw e)))))
  (def-generic spawn ()
    ((create this))))



(export Compiler)
