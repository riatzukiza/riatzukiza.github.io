(namespace repl)

(include "../../../../headers/repl.sibilant"
         "../../../../headers/interface.sibilant"
         "../../../../headers/core")

(import-namespace core)
(import-namespace interface )
(import-namespace events)


(var curry R.curry)

(import Compiler "./compiler.js")
(import Reader "./reader.js")
(import Evaluator "./evaluator.js")
(import Layer "./layer.js")

(macro gets (obj interface) `(get @obj (get @interface 'symbol)))

(define REPL (Layer.of [Reader Compiler Evaluator])
  (init ()
        (.call Layer.init this)
        (.on this 'message (=> ([type value]) (.emit this type value)))))

(export REPL)
(export Compiler)
(export Reader)
(export Evaluator)
(export Layer)
