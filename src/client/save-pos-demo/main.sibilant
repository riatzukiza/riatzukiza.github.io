(import simplex3 "/shared/noise.js")

(const velocities (.create Vector-phase-space 1024))
(const positions (.create Vector-phase-space 1024))
(const vertices (vertex-layer 1024))

(const movement (.spawn Thread "/client/save-pos-demo/workers/movement.js"))
(const noise-field (.spawn Thread "/client/save-pos-demo/workers/noise-field.js"))

(define Threaded-system Interface
  (data [])
  (init ((thread (.spawn Thread this.thread-url))))
  (def update ()
    (.send this.thread (map this.data (data) [
                            data.current-state.buffer
                            data.next-state.buffer
                            ]))
    )
  )

(define Movement-system Interface
  (def update ()
    (.send movement [
           velocities.current-state.buffer
           movement.current-state.buffer


           velocities.next-state.buffer
           movement.next-state.buffer
           ])
    ))


(for-of! p positions.data
         (set (get vertices p.index 'color) 'r 10 'g 10 'b 255 'a 1)
         (set (get vertices p.index 'point)
              'x (assign p.x (* 100 (Math.random)))
              'y (assign p.y (* 100 (Math.random)))))

(for-of! v velocities.data
         (const p (get positions.data v.index))
         (set-move-noise v p.x p.y ))

(def-async main ()
  (while! true
          (await (Promise.all [ (.update Movement-system) (.update Noise-field) ]))
          (.step velocities)
          (.step positions)

          (for-of! p positions.data
                   (set (get vertices p.index 'point)
                        'x p.x
                        'y p.y))
    )
  )
