(import Double-buffered-array "./double-buffered.sibilant")
(define Singleton Double-buffered-array
  (keys [])

  (cached data-type (const r (Object.create Data-type))
          (assign r.keys this.keys)
          (return r))

  (cached current-state (.spawn this.array-type 1))
  (cached next-state (.spawn this.array-type 1))

  (init ())

  (gett length 1)

  (def build ()
    (each this.keys (key i)
          (define-property this key
            (def get ()
              (get this.current-state.array
                   i))
            (def set (value)
              (set this.next-state.array
                   i
                   value))))))

(export Singleton)
