(define Game-entity Data-type
  (keys ['eid]))

(export Game-entity)

(define Game-entity-array Dynamic-array
  (data-type Game-entity))
(export Game-entity-array)

(define Game-entity-manager Interface
  ;; only run this in main thread
  (init ((entities (.spawn Game-entity-array 0 max-game-entities))
         (indexes {})
         (current-id 0)))

  (def aquire ()
    (const e (.grow this.entities))
    (const eid (incr this.current-id))
    (set this.indexes eid e.id)
    (assign e.eid eid)
    (return e))

  (def release (eid)
    (const new-index this.last)
    (.swap-and-remove this (get this.indexes eid))))
(export Game-entity-manager)
