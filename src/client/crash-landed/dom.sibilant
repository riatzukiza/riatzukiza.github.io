(include "../../../inc/dom.sibilant")
(import config "./config.js")
(import get-game start-game load-game save-game "./game.js")

(def-generic display-decimal (d (n 6)) (/ (Math.round (* (Math.pow 10 n) d)) (Math.pow 10 n)))

(macro sum-of (reducable ...keys)
       `(.reduce @reducable  (=> ( sum el) (+ sum (or (get el ...@keys) 0))) 0))

(def start-interface ()
  (const game (get-game))
  (const game-view (dom (.div .id "game-view" .className "panel"
                              .style (lit ("background-color" "black"))
                              (-> (if game game.rendering.context.canvas
                                      "")))))
  (with-dom Document-body
    (.div .id 'frame (.div .id "container"
                           game-view
                           (.div .id "debug-view" .className "panel"
                                 .style (lit (height (+  (second config.dimensions)"px"))
                                             (width (+ (Math.round (- (* window.innerWidth 0.2) 42)) "px"))
                                             ("overflow-y" "scroll"))
                                 (.div .id 'start-game (.button .onclick (-> (start-game)
                                                                             (start-interface)) "start game"))
                                 (.div .id 'load-game
                                       (.button .onclick (-> (load-game
                                                                   (get (.get-element-by-id
                                                                         document
                                                                         'load-save-name-field)
                                                                        'value)))
                                                "load game"
                                                )
                                       (.input .type 'text
                                               .id 'load-name-field))
                                 (.div .id 'save-game
                                       (.button .onclick (-> (save-game
                                                                   (get (.get-element-by-id
                                                                         document
                                                                         'save-name-field)
                                                                        'value)))
                                                "save game")
                                       (.input .type 'text
                                               .id 'save-name-field)))))))

(export start-interface)


