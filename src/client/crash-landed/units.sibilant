
(import Physics "/shared/systems/physics.js")
(import Player-sprites "./systems/sprites/player.js")
(import Props-sprites "./systems/sprites/basic-props.js")
(import rendering "./rendering.js")
(import Velocity "/shared/systems/velocity.js")
(import Sight "./systems/sight.js")
(import Ground-types "./systems/floor-type.js")
(import Tile-visibility "./systems/visibility.js")
(import Path-finding "./systems/path-finding.js")
(import Metabolisim "./systems/metabolisim.js")
(import Containers "./systems/containers.js")
(import Mental-state "./systems/mental-state.js")
(import Item "./systems/item.js")
(import config "./config.js")
(import Floor-sprites "./systems/sprites/floor.js")
(import Cliff-sprites "./systems/sprites/cliff.js")
(import Unit-instance Unit-group "/shared/units.js")

(define Item-unit Unit-instance
  (gett data this.entity.item-interface)
  (gett container this.data.container)
  (def consume (entity)
    (.consume this.data entity)))
(export Item-unit)

(define Item-group Unit-group
  (instance-interface Item-unit)
  (template false)
  (group-name 'item)
  (component-types [Props-sprites Item ]))
(export Item-group)

(define Player-unit Unit-instance
  (gett sprite this.entity.player-sprite)
  (gett pathing this.entity-current-path)
  (gett mind-state this.entity.mind-state)
  (gett needs this.entity.needs)
  (gett los this.entity.field-of-view)
  (gett velocity this.entity.velocity-interface)
  (def eat (item)
    (.eat this.needs item)))
(export Player-unit)

(define Player Unit-group

  (template false)
  (instance-interface Player-unit)
  (group-name 'player)
  (component-types [Player-sprites Velocity Sight Path-finding Metabolisim Mental-state]))
(export Player)

