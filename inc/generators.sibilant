(namespace generators)
(macro lambda* (args ...body)
       ["function*" `(parenthetic (comma @args.contents))
                    `(curly (do-block ...@body))])
(macro def* (name args ...body)
       ["function* " name `(parenthetic (comma ...@args.contents))
                     `(curly (do-block ...@body))])
(macro def-generic* (name args ...body)
       `(generic @name (def*) @args ...@body))
(def-lit-macro def* (name args ..body)
  ["*"name  `(parenthetic (comma @args.contents))
      `(curly (do-block ...@body))])
(macro method* (name args ..body)
  ["*"name  `(parenthetic (comma @args.contents))
      `(curly (do-block ...@body))])
(def-lit-macro def-generic* (name args ...body)
  `(generic @name (method*) @args ...@body))

(macro async-lambda* (args ...body)
       ["async function*" `(parenthetic (comma ...@args.contents))
                          `(curly (do-block ...@body))])
(macro async-def* (name args ...body)
       ["async function* " name `(parenthetic (comma ...@argso.contents))
                           `(curly (do-block ...@body))])
(alias-macro async-def* def-async* )
(macro def-generic-async* (name args ...body)
       `(generic @name (def-async*) @args ..body)
       )
(def-lit-macro def-async* (name args ..body)
  ["async " "*" name  `(parenthetic (comma ...@args.contents)) `(curly (do-block ...@body))])
(def-lit-macro def-generic-async* (name args ...body)
  `(generic @name (def-async*) @args
            ...@body))

