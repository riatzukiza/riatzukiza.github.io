(namespace dev)

(import-namespace markup)
(import-namespace interface)
(import-namespace async)

(require! (lit (js beautify))  "js-beautify"
          'browserify)

(var compiler (.spawn Compiler))
(var evaluator (.spawn Evaluator))

(const main-bundles (new Map))
(const lib-bundles (new Map))
(const bundles (new Map))
(macro try! (...body)
       (const last (.pop body))
       ["try " `(block ...@(interleave ";\n" body)) last])
(macro catch! (...body)
       ["catch(e) " `(block ...@(interleave ";\n" body))])
(macro then-once (emitter event-name)
       `(new Promise (=> (resolve reject)
                         (once @emitter @event-name (data)
                               (resolve data)))))


(.on compiler 'error (aprint "compiler:error"))
(.on evaluator 'error (aprint "evaluator:error"))

(def js-target-path (src-path) (+ (strip-sibilant-extension src-path) ".js"))

(def strip-sibilant-extension (path)
  (Path.join
   (Path.dirname path)
   (Path.basename path ".sibilant")))
(include "./bundle-shared.sibilant"
         "./bundle.sibilant"
         "./bundle-external.sibilant"
         "./compile-html.sibilant"
         "./compile-module.sibilant"
         "./compile-client-module.sibilant"
         )





